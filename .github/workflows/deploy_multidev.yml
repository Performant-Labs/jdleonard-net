name: Deploy to MultiDev

on:
  workflow_dispatch:
    inputs:
      destination_env:
        description: 'To which MultiDev environment do you wish to deploy? (m1-m10)'
        required: true
        default: 'm1'
      clone_env:
        description: 'From which other Pantheon environment shall we clone the database and files? (dev, test, live, m1-m10)'
        required: true
        default: 'live'

env:
  php_version: '7.4'
  pantheon_env: ${{ github.event.inputs.destination_env }}
  pantheon_repo: ${{ secrets.PANTHEON_REPO }}
  pantheon_site_name: ${{ secrets.PANTHEON_SITE_NAME }}

jobs:
  phpcs-drupal:
    name: Drupal coding standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2036a08e25fa78bbd946711a407b529a0a1204bf
      - uses: guix77/phpcs-drupal-action@13654eb230b095cb6ad4eec195355d9cf0033fa5

  deploy:
    name: Deploy to Pantheon MultiDev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@2036a08e25fa78bbd946711a407b529a0a1204bf

      - name: Setup PHP
        uses: shivammathur/setup-php@1c76a2a403a2b2a322b4a13e3e0613c154eeb158
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: ${{ env.php_version }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@5ca27f25cb3a0babe750cad7e4fddd3e55f29e9a
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Avoid GitHub rate limit for Composer
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Composer install
        run: composer install --no-dev --no-interaction --no-progress

      - name: Place SSH key
        uses: shimataro/ssh-key-action@6f350ca8484d8d55c2e361e74d17e638dabe713a
        with:
          key: ${{ secrets.PANTHEON_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Install Terminus
        # We use cgr to avoid dependency conflicts
        run: |
          composer global require consolidation/cgr
          PATH="$(composer config -g home)/vendor/bin:$PATH"
          echo "::add-path::$(composer config -g home)/vendor/bin"
          cgr pantheon-systems/terminus
          terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}

      - name: Prepare code for deployment
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          commit_message=$(git log -1 --pretty=%B)
          rm -rf .git
          rm -rf .github
          rm -rf scripts
          rm -rf web/core/*.txt
          git init
          git config --local gc.auto 0
          git add --force .
          git commit -m "Automated deploy: $commit_message" >/dev/null

      - name: Enable maintenance mode
        run: terminus drush -y $pantheon_site_name.$pantheon_env sset system.maintenance_mode 1

      - name: Clone database and files from Live
        run: terminus env:clone-content -y $pantheon_site_name.${{ github.event.inputs.clone_env }} $pantheon_env

      - name: Enable maintenance mode again
        run: terminus drush -y $pantheon_site_name.$pantheon_env sset system.maintenance_mode 1

      - name: Push code to Pantheon MultiDev
        run: |
          git remote add pantheon $pantheon_repo
          git push --force pantheon HEAD:$pantheon_env

      # There is no easy way to know when the code has actually synced to the Pantheon environment so we can't reliably
      # run Drush commands immediately after pushing code. Thus, we run database updates, import config, and disable
      # maintenance mode using Pantheon's Quicksilver scripting (see web/private/quicksilver/sync_code.php referenced by
      # pantheon.yml).
